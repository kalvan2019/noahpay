<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.noahpay.pay.commons.db.account.mapper.AccountFreezeBillMapper">

    <!-- @kalvan-tools.generated -->
    <resultMap id="BaseResultMap" type="com.noahpay.pay.commons.db.account.model.AccountFreezeBill">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="account_freeze_id" jdbcType="VARCHAR" property="accountFreezeId"/>
        <result column="ref_trans_id" jdbcType="VARCHAR" property="refTransId"/>
        <result column="account_no" jdbcType="BIGINT" property="accountNo"/>
        <result column="cust_no" jdbcType="BIGINT" property="custNo"/>
        <result column="freeze_amount" jdbcType="BIGINT" property="freezeAmount"/>
        <result column="freeze_reason" jdbcType="VARCHAR" property="freezeReason"/>
        <result column="freeze_account_date" jdbcType="INTEGER" property="freezeAccountDate"/>
        <result column="unfreeze_amount" jdbcType="BIGINT" property="unfreezeAmount"/>
        <result column="unfreeze_reason" jdbcType="VARCHAR" property="unfreezeReason"/>
        <result column="unfreeze_account_date" jdbcType="INTEGER" property="unfreezeAccountDate"/>
        <result column="state" jdbcType="TINYINT" property="state"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="selectAllField">
        SELECT t.id
             , t.account_freeze_id
             , t.ref_trans_id
             , t.account_no
             , t.cust_no
             , t.freeze_amount
             , t.freeze_reason
             , t.freeze_account_date
             , t.unfreeze_amount
             , t.unfreeze_reason
             , t.unfreeze_account_date
             , t.state
             , t.create_time
             , t.update_time
    </sql>

    <sql id="whereCondition">
        FROM account_freeze_bill t
        WHERE
        <if test="params.accountFreezeId != null and params.accountFreezeId.trim() != ''">
            t.account_freeze_id = #{params.accountFreezeId} AND
        </if>
        <if test="params.refTransId != null and params.refTransId.trim() != ''">
            t.ref_trans_id = #{params.refTransId} AND
        </if>
        <if test="params.accountNo != null and params.accountNo.trim() != ''">
            t.account_no = #{params.accountNo} AND
        </if>
        <if test="params.custNo != null and params.custNo.trim() != ''">
            t.cust_no = #{params.custNo} AND
        </if>
        <if test="params.freezeAccountDate != null and params.freezeAccountDate.trim() != ''">
            t.freeze_account_date = #{params.freezeAccountDate} AND
        </if>
        <if test="params.unfreezeAccountDate != null and params.unfreezeAccountDate.trim() != ''">
            t.unfreeze_account_date = #{params.unfreezeAccountDate} AND
        </if>
        <if test="params.updateTimeBegin != null and params.updateTimeBegin.trim() != ''">
            t.update_time BETWEEN #{params.updateTimeBegin} AND #{params.updateTimeEnd} AND
        </if>
        1=1
    </sql>

    <select id="queryPage" resultMap="BaseResultMap">
        <include refid="selectAllField"/>
        <include refid="whereCondition"/>
        ORDER BY t.id DESC
    </select>

    <select id="querySum" resultType="java.util.HashMap">
        SELECT SUM(t.freeze_amount) freezeAmount
        , SUM(t.unfreeze_amount) unfreezeAmount
        <include refid="whereCondition"/>
    </select>

</mapper>